#!/bin/sh

export POSIXLY_CORRECT=yes
export LC_NUMERIC=en_US.UTF-8

while [ "$#" -gt 0 ]; do
	case "$1" in
		list-tick | profit | pos | last-price | hist-ord | graph-pos)
			COMMAND="$1"
			SOURCE="`zcat -f -- *$2`"
			;;
		-a | -b | -t | -w)
			case "$3" in
				list-tick | profit | pos | last-price | hist-ord | graph-pos)
					COMMAND="$3"
					FILTERSOURCE="`zcat -f -- *$4`"
					;;
				*.log | *.log.gz)
					FILTERSOURCE="`zcat -f -- *$3`"
					;;
			esac
			;;
		*.log | *.log.gz)
			zcat -f -- *$1
			;;
		-h | --help)
			;;
		*)
			echo "Byl zadan neplatny argument"
	esac
	break
done

print_help(){
	echo "PRIKAZ muze byt jeden z:"
	echo
	echo "	list-tick 		– vypis seznamu vyskytujicich se burzovnich symbolu, tzv. “tickeru”."
	echo "	profit 			– vypis celkoveho zisku z uzavrenych pozic."
	echo "	pos 			– vypis hodnot aktualne drzenych pozic serazenych sestupne dle hodnoty."
	echo "	last-price 		– vypis posledne zname ceny pro kazdy ticker."
	echo "	hist-ord 		– vypis histogramu poctu transakci dle tickeru."
	echo "	graph-pos 		– vypis grafu hodnot drzenych pozic dle tickeru."
	echo
	echo
	echo "FILTR muze byt kombinace nasledujícich:"
	echo 
	echo "	-a DATETIME 	– after: jsou uvazovany pouze zaznamy PO tomto datu (bez tohoto data).
			DATETIME je formatu YYYY-MM-DD HH:MM:SS."
	echo "	-b DATETIME 	– before: jsou uvazovany pouze zaznamy PRED timto datem (bez tohoto data)."
	echo "	-t TICKER 	– jsou uvazovany pouze zaznamy odpovidajici danemu tickeru.
			Pri vice vyskytech prepinace se bere mnozina vsech uvedenych tickeru."
	echo
	echo "-h a --help vypisou napovedu s kratkym popisem kazdeho prikazu a prepinace."
	echo "		tradelog [-h|--help] [FILTR] [PRIKAZ] [LOG [LOG2 [...]]"
	echo
	echo
	echo
	echo "						    AUTHOR"
	echo "							Patrik Holan (xholan10)		3.4.2021"
}

ticker_filter(){
FILTEROUT=$(echo "$FILTERSOURCE" | awk -v OPTARG="$OPTARG" -F";" '{if($2 == OPTARG) print $0}')
}

after_filter(){
FILTEROUT=$(echo "$FILTERSOURCE" | awk -v OPTARG="$OPTARG" -F";" '{if($1 > OPTARG) print $0}')
}

before_filter(){
FILTEROUT=$(echo "$FILTERSOURCE" | awk -v OPTARG="$OPTARG" -F";" '{if($1 < OPTARG) print $0}')
}

list_tick(){
echo "$SOURCE$FILTEROUT" | awk -F";" '{ print $2 }' | sort -u
}

profit(){
echo "$SOURCE$FILTEROUT" | awk -F";" '{if( $3 == "sell" )
											{ tmpsell = tmpsell + $4*$6 }
									   else
											{ tmpbuy = tmpbuy + $4*$6 }} 
									   END {printf ( "%.2f\n", tmpsell - tmpbuy )}'
}

pos(){
echo "$SOURCE$FILTEROUT" | awk -F";" '{print $2, $1, $6, $4, $3}' | sort -k1 | awk '{
					if( $6 == "buy" )
					{
						ticker[$1] = ticker[$1] + $4; price[$1] = $5
					}
					if ( $6 == "sell" )
					{
						ticker[$1] = ticker[$1] - $4; price[$1] = $5
					}}
					END {
						for (i in ticker) printf("%10-s: %12.2f\n", i, ticker[i] * price[i])}' | sort -n -r -t: -k2
}

last_price(){
echo "$SOURCE$FILTEROUT" | awk -F ';' '{ print $2, $1, $4 }' | sort -k1 -r | awk 'NR==0 || !a[$1]++' | awk '{printf ( "%10-s:%8.2f\n", $1, $4 )}' | sort
}

hist_ord(){
echo "$SOURCE$FILTEROUT" | awk -F";" '{ print $2 }' | sort | uniq -c | awk '{ numchar=" "; while ($1-->0) numchar = numchar"#"; printf "%10-s:%s\n", $2, numchar }'
}

graph_pos(){
echo "$SOURCE$FILTEROUT" | awk -F";" -v highest=0 -v current=0 '{lastprice[$2]=$4
    if ( $3 == "buy" )
        {
            qty[$2] +=+ $6
        }
	else
        {
            qty[$2] +=- $6
        }}
    END {
        for ( i in lastprice ){
            sale[i] = qty[i]*lastprice[i]
            recent = sale[i]
			if( highest < recent )
				highest = recent
            if( sale[i] < 0 )
				recent = sale[i]*(-1)
        }
        for ( i in lastprice ){
            out=sale[i]/highest*1000; symbol="#"
            if( out < 0 )
			{
				out*=(-1); symbol="!"
            }
			printf( "%10-s: ", i )
			for( x = 1; x <= out; x = x+1 ){
				printf( "%c", symbol )
			} printf("\n")}}' | sort

}

while getopts :a:b:t:h- o					#filtry
do	case "$o" in
		a)	after_filter
			;;
		b)	before_filter
			;;
		t)	ticker_filter
			;;
		h)	print_help;
			exit 0
			;;
		-) print_help;
			exit 0
			;;
		*) echo "Neplatny filtr. Pouzijte prepiace -a, -b, -t,. Pro vypsani napovedy pouzijte prepinac -h."
			exit 1
			;;
	esac
done

case $COMMAND in
	list-tick)
		list_tick
		;;
	profit)
		profit
		;;
	pos)
		pos
		;;
	last-price)
		last_price
		;;
	hist-ord)
		hist_ord
		;;
	graph-pos)
		graph_pos
		;;
esac

if [ "$#" -eq 3	]			#Pokud je pocet argumentu roven 3 -> byl pouzit pouze filtr bez prikazu 
then							#-> na vystup se vypise pouze vystup filtru
	echo "$FILTEROUT"
fi

exit 0